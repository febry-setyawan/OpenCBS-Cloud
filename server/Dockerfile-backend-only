FROM maven:3.9-openjdk-17-slim AS builder

# Install necessary packages
RUN apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy only the backend source code
COPY . .

# Build only the Java backend (skip frontend)
RUN mvn clean package -DskipTests \
    -pl opencbs-core,opencbs-spring-boot-starter,opencbs-loans,opencbs-borrowings,opencbs-savings,opencbs-term-deposits,opencbs-bonds,opencbs-server \
    -Dexec.skip=true

# Production image
FROM openjdk:17-jdk-alpine

LABEL maintainer="OpenCBS Team"

# Install required packages
RUN apk add --no-cache curl

WORKDIR /app

# Create directories for file storage
RUN mkdir -p /app/data/attachments /app/data/templates

# Copy the built jar from builder stage
COPY --from=builder /build/opencbs-server/target/*.jar /app/opencbs-server.jar

# Copy configuration files
COPY opencbs-server/src/main/resources/application.properties /app/application.properties

# Set proper permissions
RUN chown -R nobody:nobody /app && chmod 755 /app/opencbs-server.jar

# Use non-root user for security
USER nobody

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Run the application with Java 17 compatibility flags
CMD ["java", \
     "--add-opens", "java.base/java.lang=ALL-UNNAMED", \
     "--add-opens", "java.base/java.util=ALL-UNNAMED", \
     "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED", \
     "--add-opens", "java.base/java.text=ALL-UNNAMED", \
     "--add-opens", "java.base/java.io=ALL-UNNAMED", \
     "--add-opens", "java.rmi/sun.rmi.transport=ALL-UNNAMED", \
     "-jar", "/app/opencbs-server.jar", \
     "-Djava.security.egd=file:/dev/./urandom", \
     "-Dspring.config.location=/app/application.properties"]